// 라우팅
// http://a.com/dashboard

//"use client" //use client로 클라언트 컴포넌트로 사용하겠다고 선언
import { Inter } from 'next/font/google'
import './globals.css'
import Link from "next/link";
import {Control} from './Control';



//metadata는 서버 컴포넌트
export const metadata = {
  title: 'Web Tutorials',
  description: 'Generated by yujin',
}


export default async function RootLayout({children}) {
  // const [topics, setTopics] = useState([]); {/*받아온 데이터를 담을 상수*/}
  // {/*서버와 통신할 때 useEffect 필요, client Componenet*/}
  // useEffect(() => {
  //   fetch('http://localhost:9999/topics')
  //     .then(resp=>resp.json())
  //     .then(result =>{
  //       setTopics(result)
  //     });
  // }, []);
  const resp = await fetch(process.env.NEXT_PUBLIC_API_URL+'topics', {cache: "no-store"}); //한번 가져온 정보를 저장 -> 데이터 추가 시 반영이 안 됨 -> 캐시 revalidating, {next: {revalidate: 0}}
  const topics = await resp.json();
  return (
    <html >
    <body>
    <h1><Link href="/">WEB</Link></h1>
    
    <ol>
      {/*<li><Link href="/read/1">html</Link></li>*/}
      {/*<li><Link href="/read/2">css</Link></li>*/}
      {topics.map((topic)=>{
        return <li key={topic.id}><Link href={`/read/${topic.id}`}>{topic.title}</Link></li>
      })}
    </ol>
    {children} {/*children는 page.js가 리턴한 값을 그대로 가져옴*/}
    <Control/>
    </body>
    </html>
  )
}


